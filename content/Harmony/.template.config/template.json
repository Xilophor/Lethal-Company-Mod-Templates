{
    "$schema": "http://json.schemastore.org/template",
    "author": "Xilophor",
    "classifications": [ "Lethal Company", "Mod", "BepInEx", "Harmony" ],
    "identity": "Xilophor.LC.ModTemplate",
    "name": "Lethal Company Harmony Mod Template",
    "shortName": [ "lchmod", "lcharmony" ],
    "sourceName": "Harmony.ModTemplate",
    "tags": {
        "language": "C#",
        "type": "project"
    },
    "preferNameDirectory": true,
    "forms": {
        "namespace": {
            "identifier": "safe_namespace"
        },
        "classname": {
            "identifier": "safe_name"
        },
        "guid": {
            "identifier": "replace",
            "pattern": "[^a-zA-Z0-9\\._\\-]+",
            "replacement": ""
        },
        "identity": {
            "identifier": "identity"
        }
    },
    "symbols": {
        "ModGuid": {
            "type": "parameter",
            "description": "The global identifier specific to your mod. (Ex. username.ModName)",
            "datatype": "text"
        },
        "ModGuidGen": {
            "type": "generated",
            "generator": "coalesce",
            "parameters": {
                "sourceVariableName": "ModGuid",
                "fallbackVariableName": "name"
            }
        },
        "ModGuidReplacer": {
            "type": "derived",
            "valueSource": "ModGuidGen",
            "valueTransform": "guid",
            "replaces": "{ModGuid}"
        },
        "NamespaceReplacer": {
            "type": "derived",
            "valueSource": "name",
            "valueTransform": "namespace",
            "replaces": "Harmony._ModTemplate"
        },
        "ClassnameReplacer": {
            "type": "derived",
            "valueSource": "name",
            "valueTransform": "classname",
            "replaces": "Harmony__ModTemplate",
            "fileRename": "Harmony__ModTemplate"
        },
        "IdentityReplacer": {
            "type": "derived",
            "valueSource": "name",
            "valueTransform": "identity",
            "replaces": "{Product}"
        },
        "Version": {
            "type": "parameter",
            "description": "The initial version of your mod, in semantic versioning. (Ex. 1.0.0)",
            "datatype": "text",
            "isEnabled": "!UseMinVer",
            "defaultValue": "1.0.0",
            "replaces": "{Version}"
        },
        "LobbyCompatibility": {
            "type": "parameter",
            "description": "Whether to use lobby compatibility or not.",
            "datatype": "bool",
            "defaultValue": "true"
        },
        "CompatibilityLevel": {
            "type": "parameter",
            "description": "The compatibility level of the mod.",
            "datatype": "choice",
            "choices": [
                {
                    "choice": "CompatibilityLevel.ClientOnly",
                    "description": "",
                    "displayName": "Client Only"
                },
                {
                    "choice": "CompatibilityLevel.ServerOnly",
                    "description": "",
                    "displayName": "Server Only"
                },
                {
                    "choice": "CompatibilityLevel.Everyone",
                    "description": "",
                    "displayName": "Everyone"
                },
                {
                    "choice": "CompatibilityLevel.ClientOptional",
                    "description": "",
                    "displayName": "Client Optional"
                }
            ],
            "enableQuotelessLiterals": false,
            "defaultValue": "ClientOnly",
            "replaces": "{CompatibilityLevel}"
        },
        "VersionStrictness": {
            "type": "parameter",
            "description": "The version strictness of the mod.",
            "datatype": "choice",
            "choices": [
                {
                    "choice": "VersionStrictness.None",
                    "description": "",
                    "displayName": "None"
                },
                {
                    "choice": "VersionStrictness.Major",
                    "description": "",
                    "displayName": "Major"
                },
                {
                    "choice": "VersionStrictness.Minor",
                    "description": "",
                    "displayName": "Minor"
                },
                {
                    "choice": "VersionStrictness.Patch",
                    "description": "",
                    "displayName": "Patch"
                }
            ],
            "enableQuotelessLiterals": false,
            "defaultValue": "None",
            "replaces": "{VersionStrictness}"
        },
        "BepInExPluginLocation": {
            "type": "parameter",
            "description": "The file path of the plugin or profile directory to copy to for quick testing. If left blank, the mod will not be copied. Must include a trailing separator (/)",
            "datatype": "text",
            "defaultValue": "",
            "replaces": "{PluginDirectory}"
        },
        "ReferenceGameLibsPackage": {
            "type": "parameter",
            "description": "Use the GameLibs NuGet Package to avoid manually referencing game files.",
            "datatype": "bool",
            "defaultValue": "true"
        },
        "PublicizeGameAssemblies": {
            "type": "parameter",
            "description": "Publicize the Game Assemblies to access internal or private classes, fields, methods, and properties.",
            "datatype": "bool",
            "defaultValue": "false"
        },
        "UseMinVer": {
            "type": "parameter",
            "description": "Instead of manually changing the mod version, use MinVer and automatically update the mod version based off of git tags (ie 'v1.2.3'). Only enable if you are using git vsc (ie GitHub).",
            "datatype": "bool",
            "defaultValue": "false"
        },
        "UseNetcodePatcher": {
            "type": "parameter",
            "description": "Publicize the Game Assemblies to access internal or private classes, fields, methods, and properties. If using Visual Studio, you must run the cmd/sh file yourself to finish installation.",
            "datatype": "bool",
            "defaultValue": "false"
        },
        "NuGetPackages": {
            "type": "parameter",
            "description": "CURRENTLY DOES NOT WORK WITH VISUAL STUDIO. Packages to reference for your mod. This will allow you to avoid manually referencing the assemblies if they have nuget packages.",
            "datatype": "choice",
            "enableQuotelessLiterals": true,
            "allowMultipleValues": true,
            "choices": [
                {
                    "choice": "none"
                },
                {
                    "choice": "ConfigurableCompany",
                    "description": "Reference the ConfigurableCompany package."
                },
                {
                    "choice": "CSync",
                    "description": "Reference the CSync package."
                },
                {
                    "choice": "LethalLib",
                    "description": "Reference the Lethal Lib package."
                },
                {
                    "choice": "LethalNetworkAPI",
                    "description": "Reference the LethalNetworkAPI package."
                },
                {
                    "choice": "LethalSettings",
                    "description": "Reference the LethalNetworkAPI package."
                },
                {
                    "choice": "TerminalAPI",
                    "description": "Reference the TerminalAPI package."
                }
            ],
            "defaultValue": "none"
        },
        "HasNuGetPackage" : {
            "type": "computed",
            "value": "NuGetPackages == ConfigurableCompany || NuGetPackages == CSync || NuGetPackages == LethalLib || NuGetPackages == LethalNetworkAPI || NuGetPackages == LethalSettings || NuGetPackages == TerminalAPI"
        }
    },
    "sources": [
        {
            "exclude": [
                "**/[Bb]in/**",
                "**/[Oo]bj/**",
                ".template.config/**/*",
                "**/*.filelist",
                "**/*.user",
                "**/*.lock.json",
                "**/*.cmd",
                "**/*.sh"
            ],
            "modifiers": [
                {
                    "condition": "BepInExPluginLocation != \"\"",
                    "include": [
                        "**.user"
                    ]
                },
                {
                    "condition": "UseNetcodePatcher",
                    "include": [
                        "install-netcode-patcher.*"
                    ]
                },
                {
                    "condition": "OS != \"Windows_NT\"",
                    "exclude": [
                        "**.cmd"
                    ]
                },
                {
                    "condition": "OS == \"Windows_NT\"",
                    "exclude": [
                        "**.sh"
                    ]
                }
            ]
        }
    ],
    "postActions": [
        {
            "condition": "(OS != \"Windows_NT\") && (UseNetcodePatcher || UseThunderstoreCLI)",
            "description": "Make scripts executable",
            "manualInstructions": [{
              "text": "Run 'chmod +x *.sh'"
            }],
            "actionId": "cb9a6cf3-4f5c-4860-b9d2-03a574959774",
            "args": {
                "+x": "*.sh"
            },
            "continueOnError": true
        },
        {
            "actionId": "3A7C4B45-1F5D-4A30-959A-51B88E82B5D2",
            "condition": "(UseNetcodePatcher) && (OS != \"Windows_NT\")",
            "args": {
                "executable": "install-netcode-patcher.sh",
                "redirectStandardOutput": false,
                "redirectStandardError": false
            },
            "manualInstructions": [{
                "text": "Run 'install-netcode-patcher.sh'"
            }],
            "continueOnError": false,
            "description ": "Setups Netcode Patcher by calling install-netcode-patcher.sh"
        },
        {
            "actionId": "3A7C4B45-1F5D-4A30-959A-51B88E82B5D2",
            "condition": "(UseNetcodePatcher) && (OS == \"Windows_NT\")",
            "args": {
                "executable": "install-netcode-patcher.cmd",
                "redirectStandardOutput": false,
                "redirectStandardError": false
            },
            "manualInstructions": [{
                "text": "Run 'install-netcode-patcher.cmd'"
            }],
            "continueOnError": false,
            "description ": "Setups Netcode Patcher by calling install-netcode-patcher.cmd"
        },
        {
            "description": "Add projects to solution",
            "manualInstructions": [ { "text": "Add generated project to solution manually." } ],
            "args": {
                "solutionFolder": "src",
                "projectFiles": [ "Harmony.ModTemplate.csproj" ]
            },
            "actionId": "D396686C-DE0E-4DE6-906D-291CD29FC5DE",
            "continueOnError": true
        }
    ]
}
